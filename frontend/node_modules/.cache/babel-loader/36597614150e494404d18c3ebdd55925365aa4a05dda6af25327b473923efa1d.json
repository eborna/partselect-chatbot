{"ast":null,"code":"var _jsxFileName = \"/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n  const suggestedQuestions = [\"What are common refrigerator problems?\", \"How do I replace a dishwasher pump?\", \"What's the lifespan of a washing machine?\"];\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async messageToSend => {\n    if (messageToSend.trim() !== \"\") {\n      // Set user message\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"user\",\n        content: messageToSend\n      }]);\n      setInput(\"\");\n\n      // Call API & set assistant message\n      const newMessage = await getAIMessage(messageToSend);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n  };\n  const handleSuggestedQuestion = question => {\n    setInput(question);\n    handleSend(question);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"${message.role}-message-container\",\n        children: message.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ${message.role}-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested-questions\",\n        children: suggestedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggested-question-button\",\n          onClick: () => handleSuggestedQuestion(question),\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\",\n          onKeyPress: e => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              handleSend(input);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => handleSend(input),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"dx5aULH2TcE+2DBqwxF5LBO8474=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAIMessage","marked","jsxDEV","_jsxDEV","ChatWindow","_s","defaultMessage","role","content","suggestedQuestions","messages","setMessages","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","messageToSend","trim","prevMessages","newMessage","handleSuggestedQuestion","question","className","children","map","message","index","dangerouslySetInnerHTML","__html","replace","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","value","onChange","e","target","placeholder","onKeyPress","key","shiftKey","preventDefault","_c","$RefreshReg$"],"sources":["/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\n\nfunction ChatWindow() {\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n\n  const suggestedQuestions = [\n    \"What are common refrigerator problems?\",\n    \"How do I replace a dishwasher pump?\",\n    \"What's the lifespan of a washing machine?\"\n  ];\n\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async (messageToSend) => {\n    if (messageToSend.trim() !== \"\") {\n      // Set user message\n      setMessages(prevMessages => [...prevMessages, { role: \"user\", content: messageToSend }]);\n      setInput(\"\");\n\n      // Call API & set assistant message\n      const newMessage = await getAIMessage(messageToSend);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n  };\n\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    handleSend(question);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={\"${message.role}-message-container\"}>\n            {message.content && (\n              <div className={\"message ${message.role}-message\"}>\n                <div dangerouslySetInnerHTML={{__html: marked(message.content).replace(/<p>|<\\/p>/g, \"\")}}></div>\n              </div>\n            )}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"input-container\">\n        <div className=\"suggested-questions\">\n          {suggestedQuestions.map((question, index) => (\n            <button \n              key={index} \n              className=\"suggested-question-button\"\n              onClick={() => handleSuggestedQuestion(question)}\n            >\n              {question}\n            </button>\n          ))}\n        </div>\n        <div className=\"input-area\">\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                handleSend(input);\n              }\n            }}\n          />\n          <button className=\"send-button\" onClick={() => handleSend(input)}>\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}