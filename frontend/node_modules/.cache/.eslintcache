[{"/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/index.js":"1","/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/App.js":"2","/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/reportWebVitals.js":"3","/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/components/ChatWindow.js":"4","/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/api/api.js":"5"},{"size":513,"mtime":1720650499532,"results":"6","hashOfConfig":"7"},{"size":297,"mtime":1720986643479,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1720650499532,"results":"9","hashOfConfig":"7"},{"size":2797,"mtime":1720986267410,"results":"10","hashOfConfig":"7"},{"size":969,"mtime":1720907326869,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eycfv9",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/index.js",[],[],"/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/App.js",["29"],[],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport ChatWindow from \"./components/ChatWindow\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"heading\">\n        PartSelect Chat\n      </div>\n        <ChatWindow/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/reportWebVitals.js",[],[],"/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/components/ChatWindow.js",["30","31"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\n\nfunction ChatWindow() {\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n\n  const suggestedQuestions = [\n    \"What are common refrigerator problems?\",\n    \"How do I replace a dishwasher pump?\",\n    \"What's the lifespan of a washing machine?\"\n  ];\n\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async (messageToSend) => {\n    if (messageToSend.trim() !== \"\") {\n      // Set user message\n      setMessages(prevMessages => [...prevMessages, { role: \"user\", content: messageToSend }]);\n      setInput(\"\");\n\n      // Call API & set assistant message\n      const newMessage = await getAIMessage(messageToSend);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n  };\n\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    handleSend(question);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={\"${message.role}-message-container\"}>\n            {message.content && (\n              <div className={\"message ${message.role}-message\"}>\n                <div dangerouslySetInnerHTML={{__html: marked(message.content).replace(/<p>|<\\/p>/g, \"\")}}></div>\n              </div>\n            )}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"input-container\">\n        <div className=\"suggested-questions\">\n          {suggestedQuestions.map((question, index) => (\n            <button \n              key={index} \n              className=\"suggested-question-button\"\n              onClick={() => handleSuggestedQuestion(question)}\n            >\n              {question}\n            </button>\n          ))}\n        </div>\n        <div className=\"input-area\">\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                handleSend(input);\n              }\n            }}\n          />\n          <button className=\"send-button\" onClick={() => handleSend(input)}>\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;","/Users/eugeniabornacini/Documents/code/interviews/instalily-case-study/frontend/src/api/api.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":25},{"ruleId":"36","severity":1,"message":"37","line":52,"column":39,"nodeType":"38","messageId":"39","endLine":52,"endColumn":74},{"ruleId":"36","severity":1,"message":"37","line":54,"column":31,"nodeType":"38","messageId":"39","endLine":54,"endColumn":64},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]